name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_test:
    name: Build and Test (.NET 8, Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          cache: true

      - name: Restore
        run: dotnet restore WorldBuilder.sln

      - name: Build
        run: dotnet build WorldBuilder.sln --configuration Release --no-restore

      - name: Test
        run: |
          dotnet test --configuration Release --no-build ^
            --logger "trx;LogFileName=test_results.trx" ^
            --results-directory TestResults

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: TestResults

  publish_windows:
    name: Publish WPF (win-x64)
    runs-on: windows-latest
    needs: build_and_test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          cache: true

      - name: Restore
        run: dotnet restore WorldBuilder.sln

      - name: Build
        run: dotnet build WorldBuilder.sln --configuration Release --no-restore

      - name: Publish WPF App (win-x64, self-contained)
        run: |
          dotnet publish Genisis.Presentation.Wpf/Genisis.Presentation.Wpf.csproj ^
            -c Release -r win-x64 --self-contained true ^
            -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true ^
            -o publish/WorldBuilderAI

      - name: Upload Publish Artifact
        uses: actions/upload-artifact@v4
        with:
          name: WorldBuilderAI-win-x64
          path: publish/WorldBuilderAI

  docker_build_and_test:
    name: Docker Build and Test (Windows Containers)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker Info
        run: |
          docker version
          docker info

      - name: Build tests image
        run: docker compose -f docker-compose.windows.yml build tests

      - name: Run tests in container
        run: docker compose -f docker-compose.windows.yml run --rm tests

      - name: Upload Container Test Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: container-test-results
          path: artifacts

