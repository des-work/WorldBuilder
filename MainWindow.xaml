﻿﻿﻿<Window x:Class="Genisis.App.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Genisis.App"
        xmlns:viewmodels="clr-namespace:Genisis.App.ViewModels"
        xmlns:models="clr-namespace:Genisis.Core.Models;assembly=Genisis.Core"
        mc:Ignorable="d"
        Title="Genisis AI" Height="720" Width="1280"
        Background="#FF2D2D30">
    <Window.Resources>
        <!-- A cozy, forest-inspired color palette -->
        <SolidColorBrush x:Key="PrimaryBackground" Color="#2c3e50"/>
        <SolidColorBrush x:Key="SecondaryBackground" Color="#34495e"/>
        <SolidColorBrush x:Key="PrimaryText" Color="#ecf0f1"/>
        <SolidColorBrush x:Key="AccentGreen" Color="#27ae60"/>
        <SolidColorBrush x:Key="AccentBrown" Color="#8d6e63"/>

        <!-- DataTemplate for the Universe View -->
        <DataTemplate DataType="{x:Type viewmodels:UniverseViewModel}">
            <StackPanel Margin="20">
                <TextBlock Text="{Binding Universe.Name}" 
                           Foreground="{StaticResource PrimaryText}" 
                           FontSize="28" FontWeight="Bold"/>
                <TextBox Text="{Binding Universe.Description, UpdateSourceTrigger=PropertyChanged}"
                         Margin="0,15,0,0" MinHeight="150" TextWrapping="Wrap" AcceptsReturn="True"
                         Background="#252526" Foreground="{StaticResource PrimaryText}" 
                         BorderThickness="0" VerticalScrollBarVisibility="Auto"/>
                <Button Content="Save Changes" Command="{Binding SaveCommand}"
                        Background="{StaticResource AccentGreen}" Foreground="White" BorderThickness="0"
                        HorizontalAlignment="Left" Margin="0,20,0,0" Padding="15,8"/>
            </StackPanel>
        </DataTemplate>

        <!-- DataTemplate for the Story View -->
        <DataTemplate DataType="{x:Type viewmodels:StoryViewModel}">
            <StackPanel Margin="20">
                <TextBlock Text="{Binding Story.Name}" 
                           Foreground="{StaticResource PrimaryText}" 
                           FontSize="28" FontWeight="Bold"/>
                <TextBlock Text="Logline" Foreground="{StaticResource PrimaryText}" FontSize="14" Margin="0,15,0,5" Opacity="0.7"/>
                <TextBox Text="{Binding Story.Logline, UpdateSourceTrigger=PropertyChanged}"
                         MinHeight="100" TextWrapping="Wrap" AcceptsReturn="True"
                         Background="#252526" Foreground="{StaticResource PrimaryText}" 
                         BorderThickness="0" VerticalScrollBarVisibility="Auto"/>
                <Button Content="Save Changes" Command="{Binding SaveCommand}"
                        Background="{StaticResource AccentGreen}" Foreground="White" BorderThickness="0"
                        HorizontalAlignment="Left" Margin="0,20,0,0" Padding="15,8"/>
                <!-- We can add a list of chapters here later -->
            </StackPanel>
        </DataTemplate>

        <!-- DataTemplate for the Character View -->
        <DataTemplate DataType="{x:Type viewmodels:CharacterViewModel}">
            <StackPanel Margin="20">
                <TextBlock Text="{Binding Character.Name}" 
                           Foreground="{StaticResource PrimaryText}" 
                           FontSize="28" FontWeight="Bold"/>

                <TextBlock Text="Tier" Foreground="{StaticResource PrimaryText}" FontSize="14" Margin="0,15,0,5" Opacity="0.7"/>
                <ComboBox ItemsSource="{Binding Tiers}" 
                          SelectedItem="{Binding Character.Tier}"
                          Background="#252526" Foreground="{StaticResource PrimaryText}" BorderThickness="0"/>

                <TextBlock Text="Biography" Foreground="{StaticResource PrimaryText}" FontSize="14" Margin="0,15,0,5" Opacity="0.7"/>
                <TextBox Text="{Binding Character.Bio, UpdateSourceTrigger=PropertyChanged}"
                         MinHeight="200" TextWrapping="Wrap" AcceptsReturn="True"
                         Background="#252526" Foreground="{StaticResource PrimaryText}" 
                         BorderThickness="0" VerticalScrollBarVisibility="Auto"/>

                <TextBlock Text="Notes" Foreground="{StaticResource PrimaryText}" FontSize="14" Margin="0,15,0,5" Opacity="0.7"/>
                <TextBox Text="{Binding Character.Notes, UpdateSourceTrigger=PropertyChanged}"
                         MinHeight="100" TextWrapping="Wrap" AcceptsReturn="True"
                         Background="#252526" Foreground="{StaticResource PrimaryText}" 
                         BorderThickness="0" VerticalScrollBarVisibility="Auto"/>

                <Button Content="Save Changes" Command="{Binding SaveCommand}"
                        Background="{StaticResource AccentGreen}" Foreground="White" BorderThickness="0"
                        HorizontalAlignment="Left" Margin="0,20,0,0" Padding="15,8"/>
            </StackPanel>
        </DataTemplate>

        <!-- DataTemplate for the Chapter View -->
        <DataTemplate DataType="{x:Type viewmodels:ChapterViewModel}">
            <StackPanel Margin="20">
                <TextBlock Text="{Binding Chapter.Title}" 
                           Foreground="{StaticResource PrimaryText}" 
                           FontSize="28" FontWeight="Bold"/>

                <TextBlock Text="Content" Foreground="{StaticResource PrimaryText}" FontSize="14" Margin="0,15,0,5" Opacity="0.7"/>
                <TextBox Text="{Binding Chapter.Content, UpdateSourceTrigger=PropertyChanged}"
                         MinHeight="400" TextWrapping="Wrap" AcceptsReturn="True"
                         Background="#252526" Foreground="{StaticResource PrimaryText}" 
                         BorderThickness="0" VerticalScrollBarVisibility="Auto"
                         FontFamily="Segoe UI" FontSize="14"/>

                <Button Content="Save Changes" Command="{Binding SaveCommand}"
                        Background="{StaticResource AccentGreen}" Foreground="White" BorderThickness="0"
                        HorizontalAlignment="Left" Margin="0,20,0,0" Padding="15,8"/>
            </StackPanel>
        </DataTemplate>

    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"/> <!-- Left Pane: Navigation -->
            <ColumnDefinition Width="*"/>   <!-- Center Pane: Editor -->
            <ColumnDefinition Width="300"/> <!-- Right Pane: AI/Context -->
        </Grid.ColumnDefinitions>

        <!-- Left Pane -->
        <DockPanel Grid.Column="0" Background="{StaticResource SecondaryBackground}">
            <Button DockPanel.Dock="Top" Content="+ New Universe" Margin="10" Padding="10,5"
                    Command="{Binding AddUniverseCommand}"
                    Background="{StaticResource AccentGreen}" Foreground="White" FontWeight="Bold" BorderThickness="0"/>

            <TreeView x:Name="MainTreeView" Background="Transparent" BorderThickness="0"
                      SelectedItemChanged="MainTreeView_SelectedItemChanged"
                      ItemsSource="{Binding Universes}">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}"/>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <!-- Template for Universe Items -->
                    <HierarchicalDataTemplate DataType="{x:Type models:Universe}" ItemsSource="{Binding Items}">
                        <TextBlock Text="{Binding Name}" FontWeight="Bold">
                            <TextBlock.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Add Character" Command="{Binding DataContext.AddCharacterCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"/>
                                    <Separator/>
                                    <MenuItem Header="Add Story" Command="{Binding DataContext.AddStoryCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"/>
                                    <Separator/>
                                    <MenuItem Header="Delete Universe" Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"/>
                                </ContextMenu>
                            </TextBlock.ContextMenu>
                        </TextBlock>
                    </HierarchicalDataTemplate>
                    <!-- Template for Story Items, now hierarchical -->
                    <HierarchicalDataTemplate DataType="{x:Type models:Story}" ItemsSource="{Binding Chapters}">
                        <TextBlock Text="{Binding Name}" Margin="15,0,0,0">
                            <TextBlock.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Add Chapter" Command="{Binding DataContext.AddChapterCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"/>
                                    <Separator/>
                                    <MenuItem Header="Delete Story" Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"/>
                                </ContextMenu>
                            </TextBlock.ContextMenu>
                        </TextBlock>
                    </HierarchicalDataTemplate>
                    <!-- Template for Chapter Items -->
                    <DataTemplate DataType="{x:Type models:Chapter}">
                        <TextBlock Text="{Binding Title}" Margin="30,0,0,0" FontStyle="Italic">
                            <TextBlock.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Delete Chapter" Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"/>
                                </ContextMenu>
                            </TextBlock.ContextMenu>
                        </TextBlock>
                    </DataTemplate>
                    
                    <!-- Template for the Character Folder -->
                    <HierarchicalDataTemplate DataType="{x:Type viewmodels:CharacterFolderViewModel}" ItemsSource="{Binding Characters}">
                        <TextBlock Text="{Binding Name}" Margin="15,0,0,0}" FontWeight="SemiBold" Opacity="0.8">
                            <TextBlock.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Add Character" Command="{Binding DataContext.AddCharacterCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"/>
                                </ContextMenu>
                            </TextBlock.ContextMenu>
                        </TextBlock>
                    </HierarchicalDataTemplate>

                    <!-- Template for Character Items -->
                    <DataTemplate DataType="{x:Type models:Character}">
                        <TextBlock Text="{Binding Name}" Margin="30,0,0,0}">
                            <TextBlock.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Delete Character" Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"/>
                                </ContextMenu>
                            </TextBlock.ContextMenu>
                        </TextBlock>
                    </DataTemplate>
                </TreeView.Resources>
            </TreeView>
        </DockPanel>

        <!-- Center Pane -->
        <ContentControl Grid.Column="1" 
                        Content="{Binding ActiveViewModel}"
                        Background="#1e1e1e" />

        <!-- Right Pane -->
        <DockPanel Grid.Column="2" Background="{StaticResource SecondaryBackground}">
            <StackPanel DockPanel.Dock="Top" Margin="10">
                <TextBlock Text="{Binding AiViewModel.InteractionTitle}" Foreground="{StaticResource PrimaryText}" 
                           FontWeight="Bold" TextAlignment="Center"/>
                <ComboBox Margin="0,10,0,0"
                          ItemsSource="{Binding AiViewModel.AvailableModels}"
                          SelectedItem="{Binding AiViewModel.SelectedModel}"
                          Background="#252526" Foreground="{StaticResource PrimaryText}" BorderThickness="0"/>
                <Button Content="Refresh Models" Margin="0,5,0,0"
                        Command="{Binding AiViewModel.LoadModelsCommand}"
                        Background="#34495e" Foreground="White" BorderThickness="0"/>
            </StackPanel>

            <StackPanel DockPanel.Dock="Bottom" Margin="10">
                <TextBox Text="{Binding AiViewModel.UserQuery, UpdateSourceTrigger=PropertyChanged}"
                         MinHeight="60" TextWrapping="Wrap" AcceptsReturn="True"
                         Background="#252526" Foreground="{StaticResource PrimaryText}" BorderThickness="0"/>
                <Button Content="Send" Margin="0,5,0,0"
                        Command="{Binding AiViewModel.SendQueryCommand}"
                        Background="{StaticResource AccentGreen}" Foreground="White" BorderThickness="0"/>
            </StackPanel>

            <ScrollViewer VerticalScrollBarVisibility="Auto" Margin="10,0,10,10">
                <TextBlock Text="{Binding AiViewModel.AiResponse}"
                           TextWrapping="Wrap"
                           Foreground="{StaticResource PrimaryText}"/>
            </ScrollViewer>

            <!-- Loading Overlay -->
            <Grid Background="#80000000" Visibility="{Binding AiViewModel.IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Text="Thinking..." Foreground="White" FontSize="16"
                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>
        </DockPanel>
    </Grid>
</Window>