// <auto-generated />
using System;
using Genisis.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Genisis.Infrastructure.Migrations
{
    [DbContext(typeof(GenesisDbContext))]
    partial class GenesisDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("ChapterCharacter", b =>
                {
                    b.Property<int>("ChaptersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharactersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChaptersId", "CharactersId");

                    b.HasIndex("CharactersId");

                    b.ToTable("ChapterCharacter");
                });

            modelBuilder.Entity("Genisis.Core.Models.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChapterOrder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("StoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StoryId");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("Genisis.Core.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UniverseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UniverseId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Genisis.Core.Models.Story", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Logline")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UniverseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UniverseId");

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("Genisis.Core.Models.Universe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Universes");
                });

            modelBuilder.Entity("ChapterCharacter", b =>
                {
                    b.HasOne("Genisis.Core.Models.Chapter", null)
                        .WithMany()
                        .HasForeignKey("ChaptersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Genisis.Core.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Genisis.Core.Models.Chapter", b =>
                {
                    b.HasOne("Genisis.Core.Models.Story", "Story")
                        .WithMany("Chapters")
                        .HasForeignKey("StoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Story");
                });

            modelBuilder.Entity("Genisis.Core.Models.Character", b =>
                {
                    b.HasOne("Genisis.Core.Models.Universe", "Universe")
                        .WithMany("Characters")
                        .HasForeignKey("UniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Universe");
                });

            modelBuilder.Entity("Genisis.Core.Models.Story", b =>
                {
                    b.HasOne("Genisis.Core.Models.Universe", "Universe")
                        .WithMany("Stories")
                        .HasForeignKey("UniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Universe");
                });

            modelBuilder.Entity("Genisis.Core.Models.Story", b =>
                {
                    b.Navigation("Chapters");
                });

            modelBuilder.Entity("Genisis.Core.Models.Universe", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("Stories");
                });
#pragma warning restore 612, 618
        }
    }
}
